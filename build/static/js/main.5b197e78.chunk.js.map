{"version":3,"sources":["firebase.js","components/Header.js","features/appSlice.js","components/SidebarOption.js","components/Sidebar.js","components/ChatInput.js","components/Message.js","components/Chat.js","images/logo2.png","components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderContainer","HeaderLeft","HeaderAvatar","onClick","signOut","alt","displayName","src","photoURL","HeaderSearch","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","SidebarOption","Icon","title","addChannelOption","id","dispatch","useDispatch","SidebarOptionContainer","channelName","prompt","collection","add","fontSize","style","padding","SidebarOptionChannel","h3","Sidebar","useCollection","channels","SidebarContainer","SidebarHeader","SidebarInfo","AddIcon","docs","map","doc","data","ChatInput","channelId","chatRef","useState","input","setInput","ChatInputContainer","value","onChange","e","target","Button","hidden","type","preventDefault","message","timestamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","Message","MessageContainer","MessageInfo","Chat","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessages","loading","useEffect","ChatContainer","ChatMessages","ChatBottom","ref","Login","LoginContainer","LoginInnerContainer","signInWithPopup","catch","error","alert","App","AppLoading","AppLoadingContents","color","fadeIn","className","AppBody","path","exact","store","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b197e78.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyACuM62ORUrqO4vG_GDuuoeh2dQ5Ijfn8E\",\n    authDomain: \"reddy-cakes-app.firebaseapp.com\",\n    projectId: \"reddy-cakes-app\",\n    storageBucket: \"reddy-cakes-app.appspot.com\",\n    messagingSenderId: \"186280075094\",\n    appId: \"1:186280075094:web:c97d29fb124f7ebcfe80f7\"\n  };\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider, db };","import React from 'react'\nimport styled from \"styled-components\";\nimport { Avatar } from \"@material-ui/core\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from '../firebase';\n\nfunction Header() {\n    const [user] = useAuthState(auth);\n    return (\n        <HeaderContainer>\n            {/*Header left*/}\n            <HeaderLeft>\n                <HeaderAvatar \n                    onClick={() => auth.signOut()}\n                    alt={user?.displayName}\n                    src={user?.photoURL}\n                />\n                {/*<AccessTimeIcon />*/}\n            </HeaderLeft>\n\n            {/*Header search*/}\n            <HeaderSearch>\n                <SearchIcon />\n                <input placeholder=\"Search ReddyCakes Community\"/>\n            </HeaderSearch>\n\n            {/*Header right*/}\n            <HeaderRight>\n                {/*<HelpOutlineIcon />*/}\n            </HeaderRight>\n        </HeaderContainer>\n    )\n}\n\nexport default Header;\n\nconst HeaderSearch = styled.div`\n    flex: 0.4;\n    opacity: 1;\n    border-radius: 6px;\n    background-color: #333333;\n    text-align: center;\n    display: flex;\n    padding: 0 50px;\n    color: gray;\n    border: 1px gray solid;\n\n    > input {\n        background-color: transparent;\n        border: none;\n        text-align: center;\n        min-width: 30vw;\n        outline: 0;\n        color: pink;\n    }\n`;\n\nconst HeaderContainer = styled.div`\n    display: flex;\n    position: fixed;\n    width: 100%;\n    align-items: center;\n    justify-content: space-between;\n    padding: 10px 0;\n    background-color: var(--reddy-color);\n    color: white;\n`;\n\nconst HeaderLeft = styled.div`\n    flex: 0.3;\n    display: flex;\n    align-items: center;\n    margin-left: 20px;\n\n    > .MuiSvgIcon-root {\n        margin-left: auto;\n        margin-right: 30px;\n    }\n`;\n\nconst HeaderRight = styled.div`\n    flex: 0.3;\n    display: flex;\n    align-items: flex-end;\n\n    > .MuiSvgIcon-root {\n        margin-left: auto;\n        margin-right: 20px;\n    }\n`;\n\nconst HeaderAvatar = styled(Avatar)`\n    cursor: pointer;\n    \n    :hover {\n        opacity: 0.8;\n    }\n`;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState: {\n    roomId: null,\n  },\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    enterRoom: (state, action) => {\n      state.roomId = action.payload.roomId;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n});\n\nexport const { enterRoom } = appSlice.actions;\n\nexport const selectRoomId = state => state.app.roomId;\n\nexport default appSlice.reducer;\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport styled from \"styled-components\";\nimport { enterRoom } from '../features/appSlice';\nimport { db } from '../firebase';\n\nfunction SidebarOption({ Icon, title, addChannelOption, id }) {\n    const dispatch = useDispatch();\n\n    const addChannel = () => {\n        const channelName = prompt('Please enter the channel name');\n        if (channelName) {\n            db.collection('rooms').add({\n                name: channelName,\n            });\n        }\n    };\n\n    const selectChannel = () => {\n        if (id) {\n            dispatch(enterRoom({\n                roomId: id,\n            }));\n        }\n    };\n\n    return (\n        <SidebarOptionContainer\n            onClick={addChannelOption ? addChannel : selectChannel}\n        >\n            {Icon && <Icon fontSize='small' style={{ padding: 10 }} />}\n            {Icon ? (\n                <h3>{title}</h3>\n            ) : (\n                <SidebarOptionChannel>\n                    <span>#</span> {title}\n                </SidebarOptionChannel>\n            )}\n        </SidebarOptionContainer>\n    )\n}\n\nexport default SidebarOption\n\nconst SidebarOptionContainer = styled.div`\n    display: flex;\n    font-size: 12px;\n    align-items: center;\n    padding-left: 2px;\n    cursor: pointer;\n\n    :hover {\n        opacity: 0.9;\n        background-color: var(--reddy-pink);\n    }\n\n    > h3 {\n        font-weight: 500;\n    }\n\n    > h3 > span {\n        padding: 15px;\n    }\n`;\n\nconst SidebarOptionChannel = styled.h3`\n    padding: 10px 0;\n    font-weight: 300;\n`;","import React from 'react'\nimport styled from \"styled-components\";\nimport SidebarOption from './SidebarOption';\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport InsertCommentIcon from \"@material-ui/icons/InsertComment\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\nimport { auth, db } from '../firebase';\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\nfunction Sidebar() {\n    const [channels, loading, error] = useCollection(db.collection(\"rooms\"));\n    const [user] = useAuthState(auth);\n\n    return (\n        <SidebarContainer>\n            <SidebarHeader>\n                <SidebarInfo>\n                    <h2>ReddyCakes Community</h2>\n                    <h3>\n                        <FiberManualRecordIcon />\n                        {user.displayName}\n                    </h3>\n                </SidebarInfo>\n                {/*<CreateIcon />*/}\n            </SidebarHeader>\n\n            {/*\n            <SidebarOption Icon={InsertCommentIcon} title=\"Threads\" />\n            <SidebarOption Icon={InboxIcon} title=\"Mentions & reactions\" />\n            <SidebarOption Icon={DraftsIcon} title=\"Saved items\" />\n            <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel browser\" />\n            <SidebarOption Icon={PeopleAltIcon} title=\"People & user groups\" />\n            <SidebarOption Icon={AppsIcon} title=\"Apps\" />\n            <SidebarOption Icon={FileCopyIcon} title=\"File browser\" />\n            <SidebarOption Icon={ExpandLessIcon} title=\"Show less\" />\n\n\n            <hr />\n            \n\n            <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\" />\n            <hr />\n            */}\n            <SidebarOption Icon={AddIcon} addChannelOption title=\"Add Channel\" />\n\n            {channels?.docs.map(doc => (<SidebarOption key={doc.id} id={doc.id} title={doc.data().name} />))}\n        </SidebarContainer>\n    )\n}\n\nexport default Sidebar\n\nconst SidebarContainer = styled.div`\n    color: white;\n    background-color: var(--reddy-color);\n    flex: 0.3;\n    border-top: 1px solid #333333;\n    max-width: 260px;\n    margin-top: 60px;\n\n    > hr {\n        margin-top: 10px;\n        margin-bottom: 10px;\n        border: 1px solid #333333;\n    }\n`;\n\nconst SidebarHeader = styled.div`\n    display: flex;\n    border-bottom: 1px solid #333333;\n    padding: 13px;\n\n    > .MuiSvgIcon-root {\n        padding: 8px;\n        color: #49274b;\n        font-size: 18px;\n        background-color: white;\n        border-radius: 999px;\n    }\n`;\n\nconst SidebarInfo = styled.div`\n    flex: 1;\n    > h2 {\n        font-size: 15px;\n        font-weight: 900;\n        margin-bottom: 5px;\n    }\n\n    > h3 {\n        display: flex;\n        font-size: 13px;\n        font-weight: 400;\n        align-items: center;\n    }\n\n    > h3 > .MuiSvgIcon-root {\n        font-size: 14px;\n        margin-top: 1px;\n        margin-right: 2px;\n        color: green;\n    }\n`;","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button } from \"@material-ui/core\";\r\nimport { auth, db } from \"../firebase\";\r\nimport firebase from 'firebase';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nfunction ChatInput({ channelName, channelId, chatRef }) {\r\n    const [input, setInput] = useState('');\r\n    const [user] = useAuthState(auth);\r\n    \r\n    const sendMessage = e => {\r\n        e.preventDefault(); //prevents refresh\r\n\r\n        if (!channelId) {\r\n            return false;\r\n        }\r\n\r\n        db.collection('rooms').doc(channelId).collection(\"messages\").add({\r\n            message: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            user: user.displayName,\r\n            userImage: user.photoURL,\r\n        });\r\n\r\n        chatRef.current.scrollIntoView({\r\n            behavior: 'smooth',\r\n        })\r\n\r\n        setInput(\"\");\r\n    };\r\n    \r\n    return (\r\n        <ChatInputContainer>\r\n            <form>\r\n                <input value={input} onChange={e => setInput(e.target.value)} placeholder={`Message #${channelName}`} />\r\n                <Button hidden type='submit' onClick={sendMessage}>\r\n                    SEND\r\n                </Button>\r\n            </form>\r\n        </ChatInputContainer>\r\n    );\r\n}\r\n\r\nexport default ChatInput\r\n\r\nconst ChatInputContainer = styled.div`\r\n    border-radius: 20px;\r\n    > form {\r\n        position: relative;\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n    > form > input {\r\n        position: fixed;\r\n        bottom: 30px;\r\n        width: 60%;\r\n        border: 1px solid gray;\r\n        border-radius: 3px;\r\n        padding: 20px;\r\n        outline: none;\r\n        background-color: #333333;\r\n        color: var(--reddy-pink);\r\n    }\r\n    > form > button {\r\n        display: none !important;\r\n    }\r\n`;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nfunction Message({ message, timestamp, user, userImage }) {\r\n    return (\r\n        <MessageContainer>\r\n            <img src={userImage} alt=\"\" />\r\n            <MessageInfo>\r\n                <h4>\r\n                    {user}\r\n                    <span>\r\n                        {/*{new Date(timestamp?.toDate()).toUTCString()}*/}\r\n                    </span>\r\n                </h4>\r\n                <p>{message}</p>\r\n            </MessageInfo>\r\n        </MessageContainer>\r\n    )\r\n}\r\n\r\nexport default Message\r\n\r\nconst MessageContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n\r\n    > img {\r\n        height: 50px;\r\n        border-radius: 8px;\r\n    }\r\n    color: white;\r\n`;\r\nconst MessageInfo = styled.div`\r\n    padding-left: 10px;\r\n    > h4 > span {\r\n        color: gray;\r\n        font-weight: 300;\r\n        margin-left: 4px;\r\n        font-size: 10px;\r\n    }\r\n`;","import React, { useEffect, useRef } from 'react'\r\nimport styled from \"styled-components\";\r\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport { useSelector } from 'react-redux';\r\nimport ChatInput from './ChatInput';\r\nimport { selectRoomId } from \"../features/appSlice\";\r\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\r\nimport { db } from '../firebase';\r\nimport Message from './Message';\r\n\r\nfunction Chat() {\r\n    const chatRef = useRef(null);\r\n    const roomId = useSelector(selectRoomId);\r\n    const [roomDetails] = useDocument(\r\n        roomId && db.collection('rooms').doc(roomId)\r\n    );\r\n    const [roomMessages, loading] = useCollection(\r\n        roomId && db.collection('rooms').doc(roomId).collection('messages').orderBy(\"timestamp\", \"asc\")\r\n    );\r\n\r\n    useEffect(() => {\r\n        chatRef?.current?.scrollIntoView({\r\n            behavior: \"smooth\",\r\n        });\r\n    }, [roomId, loading]);\r\n\r\n    return (\r\n        <ChatContainer>\r\n            {roomDetails && roomMessages && (\r\n                <>\r\n                <Header>\r\n                    <HeaderLeft>\r\n                        <h4><strong>#{roomDetails?.data().name}</strong></h4>\r\n                        {/*<StarBorderOutlinedIcon />*/}\r\n                    </HeaderLeft>\r\n                    \r\n                    <HeaderRight>\r\n                        <p>\r\n                            {/*<InfoOutlinedIcon /> Details*/}\r\n                        </p>\r\n                    </HeaderRight>\r\n                </Header>\r\n\r\n                <ChatMessages>\r\n                    {roomMessages?.docs.map(doc => {const {message, timestamp, user, userImage} = doc.data();\r\n\r\n                    return (\r\n                        <Message \r\n                            key={doc.id}\r\n                            message={message}\r\n                            timestamp={timestamp}\r\n                            user={user}\r\n                            userImage={userImage}\r\n                        />\r\n                    )\r\n                })}\r\n                <ChatBottom ref={chatRef}/>\r\n                </ChatMessages>\r\n\r\n                <ChatInput chatRef={chatRef} channelName={roomDetails?.data().name} channelId={roomId} />\r\n            </>\r\n            )}\r\n        </ChatContainer>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n\r\nconst ChatBottom = styled.div`\r\n    padding-bottom: 200px;\r\n`;\r\n\r\nconst ChatMessages = styled.div``;\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 20px;\r\n    border-bottom: 1px solid lightgray;\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    > h4 {\r\n        display: flex;\r\n        text-transform: lowercase;\r\n        margin-right: 10px;\r\n        color: white;\r\n    }\r\n    > h4 > .MuiSvgIcon-root {\r\n        margin-left: 10px;\r\n        font-size: 18px;\r\n    }\r\n`;\r\n\r\nconst HeaderRight = styled.div`\r\n    > p {\r\n        display: flex;\r\n        align-items: center;\r\n        font-size: 14px;\r\n    }\r\n\r\n    > p > .MuiSvgIcon-root {\r\n        margin-right: 5px !important;\r\n        font-size: 16px;\r\n    }\r\n`;\r\n\r\nconst ChatContainer = styled.div`\r\n    flex: 0.7;\r\n    flex-grow: 1;\r\n    overflow-y: scroll;\r\n    margin-top: 60px;\r\n    background-color: #616161;\r\n`;","export default __webpack_public_path__ + \"static/media/logo2.017aa479.png\";","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {Button} from \"@material-ui/core\"\r\nimport { auth, provider } from '../firebase';\r\nimport { logo2 } from '../images/logo2.png';\r\n\r\nfunction Login() {\r\n    const signIn = e => {\r\n        e.preventDefault();\r\n        auth.signInWithPopup(provider).catch((error => alert(error.message)));\r\n    }\r\n\r\n    return (\r\n        <LoginContainer>\r\n            <LoginInnerContainer>\r\n                <img src=\"https://www.reddycakes.org/wp-content/uploads/2021/03/header-logo-white.png\" alt=\"ReddyCakes\" />\r\n                <h3>Community Forum</h3>\r\n                <Button onClick={signIn}>\r\n                    Sign in with Google\r\n                </Button>\r\n            </LoginInnerContainer>\r\n        </LoginContainer>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\nconst LoginContainer = styled.div`\r\n    background-color: var(--reddy-color);\r\n    height: 100vh;\r\n    display: grid;\r\n    place-items: center;\r\n`;\r\n\r\nconst LoginInnerContainer = styled.div`\r\n    padding: 25px;\r\n    text-align: center;\r\n    background-color: var(--reddy-pink);\r\n    border-radius: 10px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\r\n\r\n    > h3 {\r\n        font-weight: 300px;\r\n        font-size: 20px;\r\n        color: var(--reddy-color);\r\n    }\r\n\r\n    > img {\r\n        object-fit: contain;\r\n        height: 200px;\r\n        margin-bottom: 1px;\r\n    }\r\n\r\n    > button {\r\n        margin-top: 25px;\r\n        text-transform: inherit !important;\r\n        background-color: var(--reddy-color);\r\n        color: white;\r\n    }\r\n`;","import React from 'react';\n/*import { Counter } from './features/counter/Counter';*/\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport Chat from './components/Chat';\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from './firebase';\nimport Login from './components/Login';\nimport Spinner from \"react-spinkit\";\n\nfunction App() {\n  const [user, loading] = useAuthState(auth);\n\n  if (loading) {\n    return (\n      <AppLoading>\n        <AppLoadingContents>\n          <img src=\"https://www.reddycakes.org/wp-content/uploads/2021/03/header-logo-white.png\" alt=\"\" />\n          <Spinner \n            name = \"ball-spin-fade-loader\"\n            color = \"pink\"\n            fadeIn = \"none\"\n          />\n        </AppLoadingContents>\n      </AppLoading>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        {!user ? (\n          <Login />\n        ) : (\n          <>\n            <Header />\n            <AppBody>\n              <Sidebar />\n              <Switch>\n                <Route path=\"/\" exact>\n                  <Chat />\n                </Route>\n              </Switch>\n            </AppBody>\n          </>\n        )}\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nconst AppBody = styled.div`\n  display: flex;\n  height: 100vh;\n`;\n\nconst AppLoading = styled.div`\n  display: grid;\n  place-items: center;\n  height: 100vh;\n  width: 100%;\n`;\n\nconst AppLoadingContents = styled.div`\n  text-align: center;\n  padding-bottom: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  > img {\n    height: 100px;\n    padding: 20px;\n    margin-bottom: 40px;\n  }\n`;","import { configureStore } from '@reduxjs/toolkit';\nimport appReducer from '../features/appSlice';\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}